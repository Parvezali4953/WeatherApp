name: deploy
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-south-1
      IMAGE_NAME: weather-app
      
    steps:
      # Step 1: Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python (if needed for build)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          cd app
          docker build -t $IMAGE_NAME:$GITHUB_SHA .

      # Step 4: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 5: Login to Amazon ECR
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Step 6: Tag and push image to ECR
      - name: Push Docker image to ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REPO_URI="$ACCOUNT_ID.dkr.ecr.${AWS_REGION}.amazonaws.com/weather-prod"
          
          # Tag with :latest for easy human reference, and with :SHA for deployment
          docker tag $IMAGE_NAME:$GITHUB_SHA $REPO_URI:latest
          docker tag $IMAGE_NAME:$GITHUB_SHA $REPO_URI:$GITHUB_SHA

          docker push $REPO_URI:latest
          docker push $REPO_URI:$GITHUB_SHA
          
          # Export the full URI using the immutable SHA tag for Terraform
          IMAGE_URI_SHA="$REPO_URI:$GITHUB_SHA"
          echo "IMAGE_URI_SHA=$IMAGE_URI_SHA" >> $GITHUB_ENV

      # Step 7: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Step 8: Deploy infrastructure and app with Terraform
      - name: Terraform init and apply
        working-directory: infra
        env:
          TF_VAR_api_key: ${{ secrets.WEATHER_API_KEY }}
        run: |
          terraform init -reconfigure
          terraform apply -auto-approve \
            -var="region=${AWS_REGION}" \
            -var="project=weather" \
            -var="environment=prod" \
            -var="container_port=5000" \
            -var="desired_count=1" \
            -var="container_image=${{ env.IMAGE_URI_SHA }}" # <-- USING IMMUTABLE SHA TAG

      # Step 9: Smoke test the deployed app
      - name: Smoke test /health endpoint
        run: |
          ALB=$(terraform -chdir=infra output -raw alb_dns_name)
          curl -fsS "http://$ALB/health"
          echo "âœ… Health check passed"
