name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Get EC2 IP from SSM
        run: |
          EC2_IP=$(aws ssm get-parameter --name /weather/app/ec2_ip --query Parameter.Value --output text)
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Run security scan
        uses: github/codeql-action/analyze@v2
        with:
          category: security
       
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and Push Docker Image
        run: |
          docker build -t parvezali4953/flask-weather-app:latest .
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push parvezali4953/flask-weather-app:latest
      # ...existing code...
      - name: Debug EC2_IP
        run: echo "EC2_IP is $EC2_IP"
# ...existing code...
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull parvezali4953/flask-weather-app:latest
            docker-compose down || echo "No existing containers to stop"
            aws ssm get-parameter --name /weather/app/api_key --query Parameter.Value --output text > .env
            chmod 600 .env
            docker-compose up -d