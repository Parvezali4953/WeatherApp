name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ap-south-1
      - name: Get EC2 IP from SSM
        id: get-ec2-ip
        run: |
          EC2_IP=$(aws ssm get-parameter --name FlaskApp-IP --query Parameter.Value --output text)
          echo "::set-output name=EC2_IP::$EC2_IP"
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Install dependencies for CodeQL
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt    
      - name: Run security scan
        uses: github/codeql-action/analyze@v2
      - name: Build and Push Docker Image
        run: |
          docker build -t parvezali4953/flask-weather-app:latest .
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push parvezali4953/flask-weather-app:latest
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.get-ec2-ip.outputs.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull parvezali4953/flask-weather-app:latest
            docker-compose down 2>/dev/null || true
            echo "API_KEY=${{ secrets.API_KEY }}" > .env
            docker-compose up -d